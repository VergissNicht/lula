local Rayfield = loadstring(game:HttpGet('https://raw.githubusercontent.com/shlexware/Rayfield/main/source'))()



local Window = Rayfield:CreateWindow({
    Name = "World Defenders ",
    LoadingTitle = "WD",
    LoadingSubtitle = "by bitzlym",
    ConfigurationSaving = {
        Enabled = true,
        FolderName = nil, -- Create a custom folder for your hub/game
        FileName = "Big Hub"
    },

    KeySystem = true, -- Set this to true to use our key system
    KeySettings = {
        Title = "Sirius Hub",
        Subtitle = "Key System",
        Note = "Join the discord (discord.gg/sirius)",
        FileName = "SiriusKey",
        SaveKey = true,
        GrabKeyFromSite = false, -- If this is true, set Key below to the RAW site you would like Rayfield to get the key from
        Key = "Hello"
    }
})

Rayfield:Notify({
    Title = "Welcome!",
    Content = game.Players.LocalPlayer.Name,
    Duration = 6.5,
    Image = 4483362458,
})

local Tab = Window:CreateTab("Main", 4483362458) -- Title, Image
local Tab2 = Window:CreateTab("Event", 4483362458)
local Tab3 = Window:CreateTab("Chests/Eggs", 4483362458)
local Tab4 = Window:CreateTab("Towers", 4483362458)

local Dropdown = Tab3:CreateDropdown({
    Name = "Towers",
    Options = {"Abominable Fire God","Red Orc","Aqua Shark","Bunner Gunner","Bunny Bomber", "Bunny Ranger", "Dragon God", "Christmas Chimney", "Crazy Clown", "Crazy Goblin", "Cyber Dragon", "Cyber Ninja", "Cyber Panther", "Cyber Scorpion", "Diamond Defender", "Orc Tower", "Dino Tamer", "Dracor", "Draogn Canonn", "Dragon King", "Water Goddess", "Dragon Ram", "Egg Heads", "Electric Fence", "Air Strike", "Air Goddess","Electro", "Frankenstein", "Fred the Alien", "Frozen Mammoth", "Giant Cyclops", "Hero Ship", "Helicopter", "Hydra", "Magic Goddess", "Indominus", "Inferno", "Jurassic Jeep", "Jurassic Orb", "Earth Goddess", "King's Treasure", "LittleLizard", "Lovezilla", "Lucky Leprechaun", "Wrestler", "Martial Tiger", "Mecha Robot", "Mecha Santa", "Mystic Mage", "Mortar", "Ninja Girl", "Piggy Bank", "Pirate Ship", "Polar Pair", "Pumpkin Cannon", "Pumpkin Pirate", "Cybear", "Tactical Tank", "Javelin Knight", "Robosaurus", "Santas Sleigh", "Scientist", "Flame Turret", "Satellite Laser", "Sniper", "Skeleton Army", "Spectral Rider", "Squid Doll", "Robo Raptor", "Super Defender", "Super Dog", "Super Santa", "Super Soldier", "Caveman", "Shadow God", "TRex", "TinyTurtle", "Gargantuan God", "Village Hunter", "Light God", "Thunder God", "Visit Center", "The Golden God", "Magma Dragon", "Ice Dragon", "War God", "Squid Soldier", "Undead Dragon", "Golden Dragon", "Zombie Rex", "Rambo Rudolph", "Anubis", "Genie", "Triceraptops Tank", "OrcBeast", "Sentry Gun", "NightProwler", "The Sphinx", "Dino Hunter", "Haunted Knight", "Coffin Cruiser", "Dracula", "Pumpkin Gunner", "Demon King", "Skeleton Beast", "Cactus Jack", "Snow Beast", "Snow Patrol", "Santa's Toy", "Santa's Dragon", "Snowball Dragon", "Nutcracker" },
    CurrentOption = "Towers",
    Flag = "Dropdown3", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
    Callback = function(Option)
        towers = Option
    end,
})

local Button = Tab3:CreateButton({
    Name = "Purchase",
    Callback = function()
        local string1 = tostring(towers);
        local vec = game.Players.LocalPlayer.Character.LeftFoot.Position
        local Target = game:GetService("ReplicatedStorage").SharedModules.Knit.Services.TowerSpawnService.RF.deploy
        Target:InvokeServer(string1, vec)
    end,
})

local Section2 = Tab3:CreateSection("Chests")

local Dropdown = Tab3:CreateDropdown({
    Name = "Chests",
    Options = {"Dino","Orc","Egypt","Diamond","Christmas"},
    CurrentOption = "Option 1",
    Flag = "Dropdown1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
    Callback = function(Option)
        b = Option
    end,
})

local Button = Tab3:CreateButton({
    Name = "Purchase",
    Callback = function()
        game:GetService("ReplicatedStorage").SharedModules.Knit.Services.ChestRollService.RF.roll:InvokeServer(tostring(b))

    end,
})

local Section3 = Tab3:CreateSection("Eggs")

local Dropdown = Tab3:CreateDropdown({
    Name = "Eggs",
    Options = {"DinoPetEgg","PremiumPetEgg","OrcPetEgg","EgyptPetEgg","GodPetEgg","ChristmasPetEgg"},
    CurrentOption = "Option 1",
    Flag = "Dropdown1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
    Callback = function(Option)
        Eggs = Option
    end,
})

local Button = Tab3:CreateButton({
    Name = "Purchase",
    Callback = function()
        game:GetService("ReplicatedStorage").SharedModules.Knit.Services.EggHatchingService.RF.hatch:InvokeServer(tostring(Eggs))

    end,
})

local Toggle = Tab:CreateToggle({
    Name = "Weapon m0d",
    CurrentValue = false,
    Flag = "Toggle1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
    Callback = function(Value)
        getgenv().WE = Value
        while getgenv().WE do task.wait(5)
            spawn(function()
                for _,v in pairs(game:GetService("Players").LocalPlayer.Character:GetChildren()) do
                    if v:IsA("Tool") then

                        v.Configuration.ReloadTime.Value = 0
                        v.Configuration.MaxSpread.Value = 0
                        v.Configuration.TotalRecoilMax.Value = 0
                        v.Configuration.RecoilDecay.Value = 0
                        v.Configuration.RecoilMax.Value = 0
                        v.Configuration.RecoilMin.Value = 0
                        v.Configuration.ShotCooldown.Value = 0

                    end
                end
            end)
        end
    end,
})

local Toggle = Tab2:CreateToggle({
    Name = "Auto Campfires",
    CurrentValue = false,
    Flag = "Toggle2", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
    Callback = function(Value)
        getgenv().Ac = Value
        while getgenv().Ac do task.wait(30)
            for _,v in pairs(game:GetService("Workspace").Map.Campfires:GetChildren()) do
                if v:FindFirstChild("Fire") then
                    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = v.Fire.CFrame
                    wait(0.50)
                end
            end
        end
    end,
})

local Toggle = Tab2:CreateToggle({
    Name = "Fire",
    CurrentValue = false,
    Flag = "Toggle4", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
    Callback = function(Value)
        getgenv().fire = Value
        while getgenv().fire do task.wait(0.40)
            for _,v in pairs(game:GetService("Workspace").Map.Campfires:GetChildren()) do
                if v:FindFirstChild("Feet") then
                    fireproximityprompt(v.Feet.ProximityPrompt, 1, true)
                end
            end
        end
    end,
})

local Toggle = Tab:CreateToggle({
    Name = "Auto farm",
    CurrentValue = false,
    Flag = "Toggle3", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
    Callback = function(Value)
        getgenv().Af = Value
        while getgenv().Af do task.wait(0.01)
            for _,v in pairs(workspace:GetChildren()) do
                if v:IsA("Model") then

                    game:GetService("ReplicatedStorage").SharedModules.WeaponsSystem.Network.WeaponFired:FireServer(game:GetService("Players").LocalPlayer.Character:FindFirstChild("Dino Gun"),{
                        ["hit"] = workspace:FindFirstChild(tostring(v)),
                        ["target"] = tostring(v),
                    })
                end end
        end
    end,
})

local Section = Tab:CreateSection("Section Example")
